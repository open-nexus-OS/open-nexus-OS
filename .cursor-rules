# ==============================================================================
# Cursor AI Rules for Open-Nexus-OS (NEURON)
# ==============================================================================
#
# These rules define what the AI can/can’t touch, how to build/test/debug,
# and protect critical areas from unintended changes.
#
# ==============================================================================

# PROTECTED FILES AND DIRECTORIES
# ==============================================================================
# These items are PROTECTED and must NEVER be modified without explicit consent.

PROTECTED_ITEMS:
  - "Makefile"                        # root build orchestrator
  - ".cargo/config.toml"              # toolchain/target defaults
  - "Cargo.toml"                      # workspace definition (root)
  - "config/"                         # lint/deny/rustfmt/toolchain/semver configs
  - "scripts/"                        # build/run/check scripts
  - "podman/"                         # Containerfile and entrypoints
  - "docs/rfcs/"                      # design decisions (RFC process applies)
  - "source/kernel/neuron/"           # microkernel (explicit approval required)
  - "recipes/meta/"                   # image meta packages (desktop/mobile/minimal)
  - "third-party/"                    # external patches/notices
  - "vendor/"                         # vendored code (if populated)

# RULES FOR PROTECTED ITEMS
# ==============================================================================
# 1) NEVER modify files in PROTECTED_ITEMS unless the user explicitly approves.
# 2) Before any change: explain WHY it’s needed, WHAT the impact is, and HOW it will be tested.
# 3) Wait for explicit "yes"/"proceed" confirmation before changing anything.
# 4) Reading/analysis is allowed; writing is not.

# SAFE TO MODIFY
# ==============================================================================
# Normal iteration allowed here without asking for permission.

SAFE_TO_MODIFY:
  - "source/services/**"              # user/system services (host-first testable)
  - "source/drivers/**"               # userspace drivers (nexus-hal traits)
  - "source/libs/nexus-alloc/**"
  - "source/libs/nexus-sync/**"
  - "source/libs/nexus-sched/**"
  - "recipes/**/recipe.toml"          # recipe configs (not meta images)
  - "**/*.md"                         # documentation
  - "docs/**"                         # guides/handbook (excluding rfcs/)

# CAUTION ZONE — MODIFY WITH DEEP THINKING
# ==============================================================================
# Changes here affect ABI, security, or distributed behavior.
# Proceed carefully and always extend tests accordingly.

CAUTION_ITEMS:
  - "source/libs/nexus-abi/**"        # stable ABI types (SemVer/API-diff required)
  - "source/libs/nexus-idl/**"        # IDL/proxy/stub generator
  - "source/libs/nexus-hal/**"        # hardware abstractions (driver contracts)
  - "source/libs/nexus-sel/**"        # policy/entitlements
  - "source/services/abilitymgr/**"
  - "source/services/samgr/**"
  - "source/services/bundlemgr/**"
  - "source/services/dsoftbus/**"
  - "source/services/dist-data/**"
  - "source/services/dist-scheduler/**"
  - "source/services/windowd/**"
  - "source/services/compositor/**"
  - "source/services/systemui/**"
  - "recipes/system/**"
  - "recipes/distributed/**"
  - "recipes/graphics/**"

# NAMING & ARCHITECTURE GUARDS
# ==============================================================================
# - Do NOT introduce Linux/Wayland stacks. Our path is: windowd + compositor + systemui.
# - RISC-V only. Do not inject other targets.
# - Only core libraries carry the 'nexus-' prefix (nexus-abi, nexus-idl, nexus-hal, nexus-sel, …).
# - Do NOT add dependencies outside license allowlist (Apache-2.0, MIT, BSD-2/3).
# - Do NOT rename packages or folders without approval.
# - Keep the kernel minimal (sched/vm/ipc/cap). No drivers/policy in kernel.

# BUILD, TEST & RUN — STANDARD COMMANDS
# ==============================================================================
# All commands assume the project root is at ~/open-nexus-os.

COMMANDS:
  build:            "cd ~/open-nexus-os && make build"
  build_host:       "cd ~/open-nexus-os && MODE=host make build"
  test-host:        "cd ~/open-nexus-os && just test-host"
  test-e2e:         "cd ~/open-nexus-os && just test-e2e"
  test-os:          "cd ~/open-nexus-os && just test-os"
  test-all:         "cd ~/open-nexus-os && just test-all"
  miri-strict:      "cd ~/open-nexus-os && just miri-strict"
  miri-fs:          "cd ~/open-nexus-os && just miri-fs"
  run:              "cd ~/open-nexus-os && make run"
  debug:            "cd ~/open-nexus-os && DEBUG=1 make run"
  build-kernel:     "cd ~/open-nexus-os && just build-kernel"
  arch-check:       "cd ~/open-nexus-os && just arch-check"
  pull:             "cd ~/open-nexus-os && make pull"
  clean:            "cd ~/open-nexus-os && make clean"
  initial-setup:    "cd ~/open-nexus-os && make initial-setup"
  build-container:  "podman build --no-cache -t open-nexus-os:dev -f podman/Containerfile ."

# QUICK DEBUG HINTS
# ==============================================================================
# - Boot success: serial output should show "=== NEURON (open-nexus-os) ==="
# - Capture serial log: "cd ~/open-nexus-os && make run 2>&1 | tee build/qemu.log"
# - GDB attach: with DEBUG=1 QEMU exposes a gdb stub on the standard port.

# EXPECTED BUILD/TEST PIPELINE
# ==============================================================================
# 1) make build
#    - Build Podman image (rootless) and use it
#    - Build the workspace (libs/services on host target, kernel cross)
# 2) make test
#    - Host-first: cargo nextest (unit/contract) + headless UI golden tests
#    - No OS boot required for green tests
# 3) make run
#    - QEMU (virt, riscv64gc, SMP), kernel banner as smoke test
# 4) make pull
#    - Update all sources declared in recipes/**/recipe.toml (git/path/data)

# TEST POLICY
# ==============================================================================
# - Any new/changed module must include unit tests and (if applicable) contract tests.
# - UI/renderer paths must include headless golden tests (frame checksum).
# - DSoftBus/CRDT/IDL must maintain golden vectors and fuzzing targets.
# - ABI/IDL changes must pass SemVer/API-diff checks before merge.

# CHANGE CONTROL
# ==============================================================================
# - No breaking ABI/IDL changes without an RFC in docs/rfcs/.
# - Small, focused PRs. Commit style: Conventional Commits.
# - CODEOWNERS review required for CAUTION/PROTECTED areas.

# SPECIAL CONSIDERATIONS
# ==============================================================================
# - Never touch .git/ internals.
# - No hidden feature toggles; document flags in README/docs.
# - Do not add GPU/Wayland/Linux shortcuts.
# - Keep code comments in English; concise docstrings.

# EMERGENCY OVERRIDE
# ==============================================================================
# If the user explicitly says "override rules" or "ignore protection",
# proceed with caution and document the override clearly in the PR.
#
# ==============================================================================
# End of Rules
# ==============================================================================
