name: CI

on:
  push:
    branches: ["*"]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      RUSTUP_TOOLCHAIN: stable
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: Cargo fmt
        run: cargo +stable fmt --all -- --check
      - name: Cargo clippy
        run: cargo +stable clippy --workspace --exclude neuron --exclude neuron-boot --all-targets -- -D warnings -D clippy::unwrap_used -D clippy::expect_used -W dead_code

  host-tests:
    runs-on: ubuntu-latest
    env:
      RUSTUP_TOOLCHAIN: stable
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Cargo test (host workspace, exclude kernel)
        run: cargo +stable test --workspace --exclude neuron --exclude neuron-boot

  miri:
    needs: host-tests
    runs-on: ubuntu-latest
    env:
      RUSTUP_TOOLCHAIN: nightly-2024-02-01
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly-2024-02-01
          components: miri
      - name: Miri (samgr, strict)
        env:
          MIRIFLAGS: --cfg nexus_env="host"
        run: cargo miri test -p samgr
      - name: Miri (bundlemgr, fs enabled)
        env:
          MIRIFLAGS: -Zmiri-disable-isolation --cfg nexus_env="host"
        run: cargo miri test -p bundlemgr

  deadcode:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Dead code scan
        run: bash tools/deadcode-scan.sh

  qemu:
    needs: host-tests
    runs-on: ubuntu-latest
    env:
      RUSTUP_TOOLCHAIN: nightly
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-system-misc capnproto
      - name: Install Rust (nightly) with RISC-V target
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: riscv64imac-unknown-none-elf
      - name: QEMU kernel selftests
        env:
          RUN_UNTIL_MARKER: "1"
          RUN_TIMEOUT: "180s"
        run: ./scripts/qemu-test.sh
      - name: Upload UART log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: uart-log
          path: uart.log
      - name: Upload QEMU log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: qemu-log
          path: qemu.log
